import { createBrowserClient, createServerClient as createSSRServerClient } from '@supabase/ssr'
import { createClient } from '@supabase/supabase-js'
import { cookies } from 'next/headers'

// Client-side Supabase client
export const createClientComponentClient = () => {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL
  const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
  
  // During CI build, environment variables might not be available
  // Return null to prevent build failures in public repositories
  if (!url || !key) {
    console.warn('Supabase environment variables not found. Using mock client for build.')
    return null
  }
  
  return createBrowserClient(url, key)
}

// Server-side Supabase client (for API routes)
export const createServerClient = () => {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL
  const key = process.env.SUPABASE_SERVICE_ROLE_KEY
  
  // During CI build or missing server credentials
  if (!url || !key) {
    console.warn('Supabase server environment variables not found.')
    return null
  }
  
  return createClient(url, key)
}

// Server-side Supabase client for Server Components
export const createServerComponentClient = ({ cookies }: { cookies: () => any }) => {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL
  const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
  
  if (!url || !key) {
    console.warn('Supabase environment variables not found for server component.')
    return null
  }
  
  const cookieStore = cookies()
  
  return createSSRServerClient(url, key, {
    cookies: {
      getAll() {
        return cookieStore.getAll()
      },
      get(name: string) {
        return cookieStore.get(name)?.value
      },
      set() {
        // Read-only in server components, cookies cannot be modified
      },
      remove() {
        // Read-only in server components, cookies cannot be modified
      }
    }
  })
}

// Database types will be generated by Supabase CLI
export type Database = {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          email: string
          full_name: string | null
          role: 'admin' | 'user'
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          email: string
          full_name?: string | null
          role?: 'admin' | 'user'
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          email?: string
          full_name?: string | null
          role?: 'admin' | 'user'
          updated_at?: string
        }
      }
      user_company_data: {
        Row: {
          id: string
          user_id: string
          user_profile: any // JSON
          companies: any // JSON array
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          user_profile: any
          companies: any
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          user_profile?: any
          companies?: any
          updated_at?: string
        }
      }
      user_preferences: {
        Row: {
          id: string
          user_id: string
          watchlist_company_ids: number[]
          removed_company_ids: number[]
          view_mode: 'explore' | 'watchlist'
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          watchlist_company_ids?: number[]
          removed_company_ids?: number[]
          view_mode?: 'explore' | 'watchlist'
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          watchlist_company_ids?: number[]
          removed_company_ids?: number[]
          view_mode?: 'explore' | 'watchlist'
          updated_at?: string
        }
      }
      user_invitations: {
        Row: {
          id: string
          email: string
          full_name: string | null
          invited_by: string
          invite_token: string
          expires_at: string
          used: boolean
          created_at: string
        }
        Insert: {
          id?: string
          email: string
          full_name?: string | null
          invited_by: string
          invite_token: string
          expires_at?: string
          used?: boolean
          created_at?: string
        }
        Update: {
          id?: string
          email?: string
          full_name?: string | null
          invited_by?: string
          invite_token?: string
          expires_at?: string
          used?: boolean
        }
      }
    }
  }
}