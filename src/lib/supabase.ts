import { createBrowserClient } from '@supabase/ssr'
import { createClient } from '@supabase/supabase-js'

// Client-side Supabase client
export const createClientComponentClient = () => {
  return createBrowserClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
  )
}

// Server-side Supabase client (for API routes)
export const createServerClient = () => {
  return createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.SUPABASE_SERVICE_ROLE_KEY!
  )
}

// Database types will be generated by Supabase CLI
export type Database = {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          email: string
          full_name: string | null
          role: 'admin' | 'user'
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          email: string
          full_name?: string | null
          role?: 'admin' | 'user'
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          email?: string
          full_name?: string | null
          role?: 'admin' | 'user'
          updated_at?: string
        }
      }
      user_company_data: {
        Row: {
          id: string
          user_id: string
          user_profile: any // JSON
          companies: any // JSON array
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          user_profile: any
          companies: any
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          user_profile?: any
          companies?: any
          updated_at?: string
        }
      }
      user_preferences: {
        Row: {
          id: string
          user_id: string
          watchlist_company_ids: number[]
          removed_company_ids: number[]
          view_mode: 'explore' | 'watchlist'
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          watchlist_company_ids?: number[]
          removed_company_ids?: number[]
          view_mode?: 'explore' | 'watchlist'
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          watchlist_company_ids?: number[]
          removed_company_ids?: number[]
          view_mode?: 'explore' | 'watchlist'
          updated_at?: string
        }
      }
      user_invitations: {
        Row: {
          id: string
          email: string
          full_name: string | null
          invited_by: string
          invite_token: string
          expires_at: string
          used: boolean
          created_at: string
        }
        Insert: {
          id?: string
          email: string
          full_name?: string | null
          invited_by: string
          invite_token: string
          expires_at?: string
          used?: boolean
          created_at?: string
        }
        Update: {
          id?: string
          email?: string
          full_name?: string | null
          invited_by?: string
          invite_token?: string
          expires_at?: string
          used?: boolean
        }
      }
    }
  }
}